# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'splashscreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
from PyQt5.QtGui import QFontDatabase, QIcon
import os
import splash_screen_res


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        path=os.path.dirname(os.path.abspath(__file__))
        QFontDatabase.addApplicationFont(path+"\\fonts\\Jost-SemiBold.ttf")
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(549, 424)
        MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(549, 424))
        MainWindow.setMaximumSize(QtCore.QSize(549, 424))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("#centralwidget { background-color: rgb(255, 255, 255); }\n"
"")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMaximumSize(QtCore.QSize(549, 424))
        self.centralwidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.centralwidget.setObjectName("centralwidget")
        self.Picture_Label = QtWidgets.QLabel(self.centralwidget)
        self.Picture_Label.setGeometry(QtCore.QRect(0, -20, 561, 381))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Picture_Label.sizePolicy().hasHeightForWidth())
        self.Picture_Label.setSizePolicy(sizePolicy)
        self.Picture_Label.setText("")
        self.Picture_Label.setPixmap(QtGui.QPixmap(":/files/Файлы для заставки/iStock-958956392-1.jpg"))
        self.Picture_Label.setScaledContents(True)
        self.Picture_Label.setObjectName("Picture_Label")
        self.Gif_Label = QtWidgets.QLabel(self.centralwidget)
        self.Gif_Label.setGeometry(QtCore.QRect(16, 348, 521, 91))
        self.Gif_Label.setText("")
        self.Gif_Label.setScaledContents(True)
        self.Gif_Label.setObjectName("Gif_Label")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 150, 481, 71))
        font = QtGui.QFont()
        font.setFamily("Jost SemiBold")
        font.setPointSize(33)
        self.label.setFont(font)
        self.label.setScaledContents(True)
        self.label.setStyleSheet("QLabel {\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(0, 0, 0,70);\n"
"    border-radius: 25px;\n"
"}")
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "GRODNOLAPTOP"))

class GIF_Window(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        gif = QtGui.QMovie(":/files/Файлы для заставки/gif.gif")                    
        self.Gif_Label.setMovie(gif)
        gif.start()
        self.timer = QTimer(self) # таймер


    def start_timer(self, callback, duration=4000):
        self.timer.timeout.connect(callback)  # Устанавливаем функцию-обработчик
        self.timer.start(duration)  # Запускаем таймер на указанное время

#if __name__ == "__main__":
  #  import sys
  #  app = QtWidgets.QApplication(sys.argv)
   # Window = GIF_Window()
   # Window.show()
   # sys.exit(app.exec_())
